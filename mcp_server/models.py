# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T07:35:36+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Field401Response(BaseModel):
    detail: Optional[str] = Field(
        None, examples=["Request header 'Authorization' missing / Invalid Token"]
    )
    title: Optional[str] = Field(None, examples=['Unauthorised'])


class Field403Response(BaseModel):
    title: Optional[str] = Field(
        None,
        examples=[
            'Wrong authentication - You are not authorised to access this resource'
        ],
    )


class Provider(Enum):
    messenger = 'messenger'
    viber_service_msg = 'viber_service_msg'
    whatsapp = 'whatsapp'


class AccountResponse(BaseModel):
    access_token: Optional[str] = Field(
        None,
        description='The provider access token (only for `messenger`)',
        examples=['accessToken'],
    )
    api_key: str = Field(
        ..., description='The external api key for this account', examples=['abcd1234']
    )
    applications: Optional[List[str]] = Field(
        None,
        description='The array of associated application ids',
        examples=[['applicationId']],
    )
    external_id: str = Field(
        ...,
        description='The external identifier for this account',
        examples=['12345678'],
    )
    name: Optional[str] = Field(None, description='The account name', examples=['name'])
    provider: Provider = Field(
        ...,
        description='The provider (will be one of `messenger, viber_service_msg, whatsapp`).',
        examples=['messenger'],
    )


class MessengerAccountResponse(BaseModel):
    access_token: str = Field(
        ..., description='The provider access token', examples=['myAccessToken']
    )
    api_key: str = Field(
        ..., description='The external api key for this account', examples=['abcd1234']
    )
    applications: Optional[List[str]] = Field(
        None,
        description='The array of associated application ids',
        examples=[['optionalApplicationId']],
    )
    external_id: str = Field(
        ...,
        description='The external identifier for this account',
        examples=['12345678'],
    )
    name: Optional[str] = Field(
        None, description='The account name', examples=['optionalName']
    )
    provider: str = Field(
        ..., description='The provider (will be `messenger`).', examples=['messenger']
    )


class VSMAccountResponse(BaseModel):
    api_key: str = Field(
        ..., description='The external api key for this account', examples=['abcd1234']
    )
    applications: Optional[List[str]] = Field(
        None,
        description='The array of associated application ids',
        examples=[['optionalApplicationId']],
    )
    external_id: str = Field(
        ...,
        description='The external identifier for this account',
        examples=['12345678'],
    )
    name: Optional[str] = Field(
        None, description='The account name', examples=['optionalName']
    )
    provider: str = Field(
        ...,
        description='The provider (will be `viber_service_msg`).',
        examples=['viber_service_msg'],
    )


class WAAccountResponse(BaseModel):
    api_key: str = Field(
        ..., description='The external api key for this account', examples=['abcd1234']
    )
    applications: Optional[List[str]] = Field(
        None,
        description='The array of associated application ids',
        examples=[['optionalApplicationId']],
    )
    external_id: str = Field(
        ...,
        description='The external identifier for this account',
        examples=['12345678'],
    )
    name: Optional[str] = Field(
        None, description='The account name', examples=['optionalName']
    )
    provider: str = Field(
        ..., description='The provider (will be `whatsapp`).', examples=['whatsapp']
    )


class First(BaseModel):
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.nexmo.com/beta/chatapp-accounts?page_number=1&page_size=10'
        ],
    )


class Last(BaseModel):
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.nexmo.com/beta/chatapp-accounts?page_number=4&page_size=10'
        ],
    )


class Next(BaseModel):
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.nexmo.com/beta/chatapp-accounts?page_number=3&page_size=10'
        ],
    )


class Prev(BaseModel):
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.nexmo.com/beta/chatapp-accounts?page_number=1&page_size=10'
        ],
    )


class Self(BaseModel):
    href: Optional[str] = Field(
        None,
        examples=[
            'https://api.nexmo.com/beta/chatapp-accounts?page_number=1&page_size=10'
        ],
    )


class FieldLinks(BaseModel):
    first: Optional[First] = None
    last: Optional[Last] = None
    next: Optional[Next] = None
    prev: Optional[Prev] = None
    self: Optional[Self] = None


class MessengerPostRequest(BaseModel):
    access_token: str = Field(
        ...,
        description='This is the Facebook Business Page token. You can obtain the token using one of the following methods:\n\n* Linking your Facebook Business Page to your account [with our Dashboard tool](https://dashboard.nexmo.com/messages/social-channels/facebook-connect)\n* Requesting a Page Access Token using the steps in the [Facebook token reference](https://developers.facebook.com/docs/pages/access-tokens/)\n',
        examples=['myAccessToken'],
    )
    applications: Optional[List[str]] = Field(
        None,
        description='Contains a list of application IDs which are linked to the account. <ul> <li>There is just one application allowed per an account.</li> <li>The application type must be type "messages".</li> </ul> For more information see [Application API spec](https://developer.nexmo.com/api/application.v2)',
        examples=[['optionalApplicationId']],
        max_length=1,
        min_length=0,
    )
    external_id: str = Field(
        ...,
        description='This is the unique identifier within the provider\'s domain. In this case it is the Page ID for your Facebook Page. Go to your Facebook Page, click "Settings", click "Messenger platform " scroll down to "Messenger link" to find your Page ID.',
        examples=['12345678'],
    )
    name: Optional[str] = Field(
        None, description='Custom account name', examples=['optionalName']
    )


class InvalidParam(BaseModel):
    name: Optional[str] = Field(None, examples=['external_id'])
    reason: Optional[str] = Field(None, examples=['Missing `external_id` field'])


class MessengerPostResponse(BaseModel):
    detail: Optional[str] = Field(
        None, examples=['Found errors validating 1 of your submitted parameters.']
    )
    instance: Optional[str] = Field(None, examples=[None])
    invalid_params: Optional[List[InvalidParam]] = None
    title: Optional[str] = Field(
        None, examples=["Your request parameters didn't validate."]
    )
    type: Optional[str] = Field(
        None, examples=['https://www.nexmo.com/messages/Errors#InvalidParams']
    )


class MessengerExternalIdPatchRequest(BaseModel):
    access_token: Optional[str] = Field(None, examples=['updatedAccessToken'])
    applications: Optional[List[str]] = Field(None, examples=[['newApplicationId']])
    name: Optional[str] = Field(
        None, description='The new account name', examples=['newName']
    )


class MessengerExternalIdPatchResponse(BaseModel):
    access_token: str = Field(
        ..., description='The provider access token', examples=['updatedAccessToken']
    )
    api_key: str = Field(
        ..., description='The external api key for this account', examples=['abcd1234']
    )
    applications: Optional[List[str]] = Field(
        None,
        description='The array of associated application ids',
        examples=[['newApplicationId']],
    )
    external_id: str = Field(
        ...,
        description='The external identifier for this account. In this case it is the Facebook Page ID.',
        examples=['12345678'],
    )
    name: Optional[str] = Field(
        None, description='The account name', examples=['newName']
    )
    provider: str = Field(
        ..., description='The provider (will be `messenger`).', examples=['messenger']
    )


class InvalidParam1(BaseModel):
    name: Optional[str] = Field(None, examples=['external_id'])
    reason: Optional[str] = Field(
        None, examples=["'external_id' parameter cannot be changed"]
    )


class MessengerExternalIdPatchResponse1(BaseModel):
    detail: Optional[str] = Field(
        None, examples=['Found errors validating 1 of your submitted parameters.']
    )
    instance: Optional[str] = Field(None, examples=[None])
    invalid_params: Optional[List[InvalidParam1]] = None
    title: Optional[str] = Field(
        None, examples=["Your request parameters didn't validate."]
    )
    type: Optional[str] = Field(
        None, examples=['https://www.nexmo.com/messages/Errors#InvalidParams']
    )


class FieldProviderExternalIdApplicationsPostRequest(BaseModel):
    application: str = Field(
        ...,
        description='There is just one application allowed per an account. The application type must be type "messages". For more information please see [Application API Spec](https://developer.nexmo.com/api/application.v2)',
        examples=['applicationId'],
    )


class FieldProviderExternalIdApplicationsPostResponse(BaseModel):
    detail: Optional[str] = Field(
        None,
        description='The application does not exist or the application type is not "messages"',
        examples=['Cannot link application'],
    )
    title: Optional[str] = Field(None, examples=['Forbidden'])
    type: Optional[str] = Field(
        None, examples=['https://www.nexmo.com/messages/Errors#Forbidden']
    )


class FieldProviderExternalIdApplicationsPostResponse1(BaseModel):
    detail: Optional[str] = Field(
        None,
        description='The account reached limit of maximum number of linked applications. (The only one application is allowed per an account)',
        examples=['Unable to link application'],
    )
    title: Optional[str] = Field(None, examples=['Application conflict'])
    type: Optional[str] = Field(
        None, examples=['https://www.nexmo.com/messages/Errors#Conflict']
    )


class FieldProviderExternalIdApplicationsApplicationIdDeleteResponse(BaseModel):
    detail: Optional[str] = Field(None, examples=['Cannot unlink application'])
    title: Optional[str] = Field(None, examples=['Forbidden'])
    type: Optional[str] = Field(
        None, examples=['https://www.nexmo.com/messages/Errors#Forbidden']
    )


class FieldProviderExternalIdApplicationsApplicationIdDeleteResponse1(BaseModel):
    detail: Optional[str] = Field(
        None,
        description="The application is not linked or doesn't exist.",
        examples=['Unable to unlink application'],
    )
    title: Optional[str] = Field(None, examples=['Application conflict'])
    type: Optional[str] = Field(
        None, examples=['https://www.nexmo.com/messages/Errors#Conflict']
    )


class GetAllAccountResponse(
    MessengerAccountResponse, VSMAccountResponse, WAAccountResponse
):
    pass


class FieldDatamodelCodeGeneratorRootSpecialGetResponse(BaseModel):
    field_embedded: Optional[List[GetAllAccountResponse]] = Field(
        None, alias='_embedded'
    )
    field_links: Optional[FieldLinks] = Field(None, alias='_links')
    page_number: Optional[int] = Field(None, examples=[1])
    page_size: Optional[int] = Field(None, examples=[10])
